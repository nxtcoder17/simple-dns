name: release simple dns

on:
  workflow_dispatch:

  push:
    branches:
      - master

    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  github-release:
    name: Create Github Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.meta.outputs.version }}
      ref_slug: ${{ steps.meta.outputs.ref_slug }}
      default_branch_slug: ${{ steps.meta.outputs.default_branch_slug }}
    steps:
      - uses: nxtcoder17/actions/metadata@main
        id: meta

      - name: create github release
        uses: nxtcoder17/actions/github-release-create@main
        with:
          name: ${{steps.meta.outputs.version}}
          github_token: ${{github.token}}
          pre_release: ${{ steps.meta.outputs.is_pre_release }}

  build-image:
    strategy:
      fail-fast: true
      matrix:
        include:
          - arch: amd64
            runner: ubuntu-latest
          - arch: arm64
            runner: ubuntu-24.04-arm

    runs-on: ${{ matrix.runner }}
    name: Build Image
    needs:
      - github-release
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: nxtcoder17/actions/setup-docker@main
        with:
          docker_registry: "ghcr.io"
          docker_username: ${{ github.actor }}
          docker_password: ${{ secrets.GITHUB_TOKEN }}

      - name: docker build and push
        env:
          IMAGE: "ghcr.io/${{ github.repository }}:${{ needs.github-release.outputs.version }}-${{ matrix.arch }}"
          BUILDX_CACHE: "ghcr.io/${{ github.repository }}:buildx-cache-${{needs.github-release.outputs.ref_slug}}-${{ matrix.arch }}"
          BUILDX_CACHE_DEFAULT: "ghcr.io/${{ github.repository }}:buildx-cache-${{ needs.github-release.outputs.default_branch_slug }}-${{ matrix.arch }}"
        run: |+
          docker buildx build -t "$IMAGE" \
            --cache-to type=registry,ref="$BUILDX_CACHE",mode=max,compression=zstd,compression-level=13,force-compression=true \
            --cache-from type=registry,ref="$BUILDX_CACHE" \
            --cache-from type=registry,ref="$BUILDX_CACHE_DEFAULT" \
            --output=type=image,compression=zstd,force-compression=true,compression-level=13,push=true \
          .

  publish-multiarch-image:
    runs-on: ubuntu-latest
    name: publish-multiarch-image
    needs:
      - github-release
      - build-image
    steps:
      - uses: nxtcoder17/actions/setup-docker@main
        with:
          docker_registry: "ghcr.io"
          docker_username: ${{ github.actor }}
          docker_password: ${{ github.token }}
          qemu: false

      - shell: bash
        env:
          IMAGE: "ghcr.io/${{ github.repository }}"
          tag: "${{ needs.github-release.outputs.version }}"
        run: |+
          docker buildx imagetools create -t $IMAGE:$tag $IMAGE:$tag-amd64 $IMAGE:$tag-arm64
